NAME = File.basename(Dir.pwd)
PATH = "/webs/#{NAME}"

desc "Build and run the container."
task default: ['docker:build', 'docker:run']

# Services and unit tests run in Docker.
# Integration tests runs ON the CI AGAINST the containers.
namespace :ci do
  task :build do
    # PhantomJS
    Rake::Task['test:integration']
    [:chrome, :chromium, :canary, :firefox, :firefox_nightly, :safari].each do |browser|
      ENV['BROWSER'] = browser
      Rake::Task['test:integration'].execute
    end
  end
end

desc "Open the running site."
task :open do
  ip = %x{boot2docker ip 2> /dev/null}
  abort("Error: Boot2docker is not running.") if ip.empty?
  sh "open http://#{ip}"
end

desc "Run all the tests."
task test: ['test:unit', 'test:integration']

namespace :test do
  desc "Run the end to end tests."
  task :unit do
    puts "TODO: Run the unit tests."
  end

  desc "Run the end to end tests."
  task :integration do
    sh "bundle exec cucumber"
  end
end

namespace :docker do
  def container_id
    value = %x{docker ps | grep #{NAME}:latest | head -1 | awk '{ print $1 }'}.chomp
    value.empty? ? nil : value
  end

  def container(&block)
    if container_id
      block.call(container_id)
    else
      puts "~ No running containers found."
    end
  end

  desc "Build the image."
  task :build do
    sh "docker build -t #{NAME} ."
  end

  desc "Run the container in the foreground."
  task :run do
    sh "docker run -p 80:80 -v #{Dir.pwd}:#{PATH}:ro #{NAME}"
    # api_ppt_path = File.join(File.dirname(PATH), 'api.pay-per-task.com')
    # sh "docker run -d -p 80:80 -v #{api_ppt_path}:/webs/api.pay-per-task.com:ro api.pay-per-task.com"
  end

  desc "Start the container as a daemon."
  task :start do
    sh "docker run -d -p 80:80 -v #{Dir.pwd}:#{PATH}:ro #{NAME}"
  end

  desc "Stop the container."
  task :stop do
    container do |container_id|
      sh "docker kill #{container_id}"
    end
  end

  desc "SSH into a running container."
  task :ssh do
    container do |container_id|
      sh "docker exec -it #{container_id} /bin/sh"
    end
  end
end
